#!/usr/bin/python3
import sys
import math

def pollard_rho(n):
    """
    Pollard's Rho algorithm for integer factorization.
    Returns:
        int: A factor of n, or None if no factor is found.
    """
    def f(x):
        """
            The f() is a crucial part of the algorithm.
        Returns:
            `int`: The result of applying f to x.
        """
        return (x**2 + 1) % n

    x = 2
    y = 2
    d = 1

    while d == 1:
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x - y), n)

    if d == n:
        return None
    else:
        return d, n // d

if len(sys.argv) < 2:
    print("Usage: factors <file>", file=sys.stderr)
    exit(1)

try:
    with open(sys.argv[1], "r") as f:
            lines = f.readlines()
            for line in lines:
                nb = line.strip('\n')
                factors = pollard_rho(int(nb))
                if factors is not None:
                    factor1, factor2 = factors
                    if factor1 > factor2:
                        print(f"{nb}={factor1}*{factor2}")
                    else:
                        print(f"{nb}={factor2}*{factor1}")

except Exception as msg:
    print(msg)
